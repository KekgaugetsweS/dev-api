name: Release to Docker Hub

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment'
        required: true
        options: ['production', 'staging', 'development']
        default: 'development'
    
env:
  DOCKER_USERNAME: kekgaugetswe  
  REPO: kekgaugetswe/doosyapii
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    
    - name: Login to Docker hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Sematic versioning
      id: versioning
      uses: PaulHatch/semantic-version@v4.0.2 
      with: 
        branch: main
        tag_prefix: "v"
        major_pattern: "BREAKING CHANGES"
        minor_pattern: "feat"
        format: "v${major}.${minor}.${patch}-prerealease${increment}"
    
    - name: Build and push Docker image
      id:   docker_build
      uses: docker/build-push-action@v2
      with:
        push: true
        tags:  ${{ env.REPO }}:latest,${{ env.REPO }}:${{ steps.versioning.outputs.version }}
        file: doosy-api/Doosy.API/Dockerfile
        
    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}
       
    - name: Create Release
      if: ${{ !startsWith(github.ref, 'refs/tags/') }}
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.github_token }}
      with:
        tag_name: ${{ steps.versioning.outputs.version }}
        release_name: ${{ steps.versioning.outputs.version }}
        prerelease: true
        
    - name: testing doosy-deploy ssh connection
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST}}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: ${{ secrets.PORT }}
        script: |
          #if [  "$(docker ps  -a -f status=running  -f  name=doosyapiii)" ]; then
            #docker kill doosyapiii;
            #docker rm doosyapiii;
            docker pull ${{ env.REPO }}:${{ env.VERSION }}
            docker create --name ${{ env.VERSION }}  -p 5001:80 ${{ env.REPO }}:${{ env.VERSION }}
            docker start ${{ env.VERSION }}
          #fi
          docker ps -a
